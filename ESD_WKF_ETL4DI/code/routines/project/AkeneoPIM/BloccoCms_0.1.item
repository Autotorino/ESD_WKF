package routines;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class BloccoCms {
	
	    
	   public BloccoCms() {
		   ValuesBloccoCms values = new ValuesBloccoCms();
		   setValues(values);
	   }
	
	   public BloccoCms(JSONObject jsonObjValues) {
	    	setCode(jsonObjValues);
	    	
	    	ValuesBloccoCms values = new ValuesBloccoCms(jsonObjValues);
			setValues(values);
		}
	
	    private String code;
	    
	    private ValuesBloccoCms values;

	    public void setCode(String code){
	        this.code = code;
	    }
	    
	    public void setCode(JSONObject jsonObjBody){
	    	
	    	if(jsonObjBody!=null){
	    	  Object returnValue = jsonObjBody.get("code");
	          this.code = (returnValue instanceof String) ? (String)returnValue : null;
	    	}
	    	else
	    	  this.code = null;
	    }
	    
	    public String getCode(){
	        return this.code;
	    }
	    
	    public void setValues(ValuesBloccoCms values){
	        this.values = values;
	    }
	    
	    public ValuesBloccoCms getValues(){ 
	        return this.values;
	    }
	    
	    /**
	     * Custom methods
	     */
	    @JsonIgnore
	    public String getLabel(){
	    	
	    	if (this.values!= null && this.values.getLabel()!= null && this.values.getLabel().size()> 0 && this.values.getLabel().get(0)!=null){
	    		return this.values.getLabel().get(0).getData();
	    	}
	    	else
	    	   return null;
	    }
	    @JsonIgnore
       public String getIdentifier(){
	    	
	    	if (this.values!= null && this.values.getIdentifier()!= null && this.values.getIdentifier().size()> 0 && 
	    			 this.values.getIdentifier().get(0)!=null && this.values.getIdentifier().get(0).getData()!= null){
	    		return this.values.getIdentifier().get(0).getData();
	    	}
	    	else
	    	   return null;
	    }
	    @JsonIgnore
       public String getStatus(){
	    	
 	    	if (this.values!= null && this.values.getStatus()!= null && this.values.getStatus().size()> 0 && 
 	    			 this.values.getStatus().get(0)!=null && this.values.getStatus().get(0).getData()!= null){
 	    		return this.values.getStatus().get(0).getData();
 	    	}
 	    	else
 	    	   return null;
 	    }

	    
	    


}
