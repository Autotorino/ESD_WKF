package routines;

import java.util.List;

public class MapUtilValueSF {

   
    public static String getListDataValue(List<DataValue> attributo) {
    	try {
    		return attributo.get(0).getData();
    	}
    	catch (Exception e){
	    	return null;
    	}
    }
    
    public static String getListMultiDataValue(List<MultiDataValue> attributo) {
       	
    	StringBuilder stringBuilder = null;
    	
    	if (attributo!= null && attributo.get(0)!= null && attributo.get(0).getData()!=null && attributo.get(0).getData().size()>0)
		   	{
		   		for (String value:attributo.get(0).getData()){
		   			if (!UtilString.isEmptyTrim(value)) {
		   			    if (stringBuilder==null)
		   			    	stringBuilder = new StringBuilder(value);
		   			    else
		   				    stringBuilder.append("|"+value);
		   			}
		   		}
   		
   	        }
    	
    	return stringBuilder!= null ? stringBuilder.toString():"";
    }
    
    public static String getListMultiDataValueCloudinary(List<MultiDataValue> attributoCloudinary,String cloudinaryStaticPath,String cloudinaryFolder) {
       	
    	StringBuilder stringBuilder = null;
    	
    	if (attributoCloudinary!= null && attributoCloudinary.get(0)!= null && attributoCloudinary.get(0).getData()!=null && attributoCloudinary.get(0).getData().size()>0)
		   	{
		   		for (String cloudinaryImage:attributoCloudinary.get(0).getData()){
		   			if (!UtilString.isEmptyTrim(cloudinaryImage)) {
	   					// Valido finchè il code sarà version+"_"+(folder)+"_"+image		   				
		   				if (cloudinaryImage!= null && cloudinaryImage.indexOf("_")>0 && cloudinaryImage.indexOf("_")+1 < cloudinaryImage.length())	{ 

		   					String folderAsset = !UtilString.isEmptyTrim(cloudinaryFolder) ? cloudinaryFolder.replace("/","_")+"_" : null;
		   					
							String pathImage = null;
							
							String pathImageVersion = cloudinaryImage.substring(0, cloudinaryImage.indexOf("_"));
							
							String pathImageFile =null;
							
							if (folderAsset!=null && cloudinaryImage.contains(folderAsset)){
								
								pathImageFile = cloudinaryImage.replaceFirst(folderAsset,"").substring(cloudinaryImage.indexOf("_")+1);
								pathImage = pathImageVersion+"/"+cloudinaryFolder+"/"+pathImageFile;
							}
							else{
								pathImageFile = cloudinaryImage.substring(cloudinaryImage.indexOf("_")+1);
								pathImage = pathImageVersion+"/"+pathImageFile;
							}		   					
			   				
			   			    if (stringBuilder==null)
			   			    	stringBuilder = new StringBuilder(cloudinaryStaticPath+pathImage.toLowerCase()+".jpg");
			   			    else
			   				    stringBuilder.append("|"+cloudinaryStaticPath+pathImage.toLowerCase()+".jpg");
		   				}
		   			}
		   		}
   		
   	        }
    	
    	return stringBuilder!= null ? stringBuilder.toString():"";
    }
    
    public static String getListPriceValue(List<PriceValue> attributo) {
    	try {
    		return attributo.get(0).getData().get(0).getAmount();
    	}
    	catch (Exception e){
	    	return null;
    	}
    }
    
    public static String getListDataValueUnit(List<DataValueUnit> attributo) {
    	try {
    		return attributo.get(0).getData().getAmount();
    	}
    	catch (Exception e){
	    	return null;
    	}
    }
    
    public static Boolean getListBooleanValue(List<BooleanValue> attributo) {
    	try {
    		return attributo.get(0).getData();
    	}
    	catch (Exception e){
	    	return null;
    	}
    }
    
    public static String getListBooleanValueToString(List<BooleanValue> attributo,boolean returnEmptyForNull) {
    	try {
    		return attributo.get(0).getData().toString();
    	}
    	catch (Exception e){
    		return returnEmptyForNull ? "":"false";
    	}
    }
}
