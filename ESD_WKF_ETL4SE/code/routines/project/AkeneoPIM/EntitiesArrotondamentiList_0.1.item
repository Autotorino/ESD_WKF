package routines;

import java.util.ArrayList;
import java.util.List;




public class EntitiesArrotondamentiList {  
	
	public EntitiesArrotondamentiList() {
		// TODO Auto-generated constructor stub
	}
	
	
	public EntitiesArrotondamentiList(String jsonObject) {
		
		JSONObject jsonObjBody = new JSONObject(jsonObject);
		
	
		//setNext(jsonObjBody);
		//setCurrent_page(jsonObjBody);
		
		EmbeddedArrotondamento _embedded = new EmbeddedArrotondamento(jsonObjBody);
		setEmbedded(_embedded);
		
		
		
	}

	//private String next;
	
	//private String current_page;
	
    private EmbeddedArrotondamento _embedded;
    
    /*
    public void setNext(String next){
        this.next = next;
    }
    
    public void setNext(JSONObject jsonObjBody){
    	this.next = UtilJson.getValueStringFrom_JObject_3Level(jsonObjBody, "_links", "next","href");
    	
    }
    
    public String getNext(){
        return this.next;
    }  
    
    public void setCurrent_page(String current_page){
        this.current_page = current_page;
    }
    
    public void setCurrent_page(JSONObject jsonObjBody){
    	this.current_page = UtilJson.getValueStringFrom_JObject_1Level(jsonObjBody, "current_page");
    	
    }
    
    public String getCurrent_page(String current_page){
        return this.current_page;
    }
    */
    
    public void setEmbedded(EmbeddedArrotondamento _embedded){
        this._embedded = _embedded;
    }
    
    public EmbeddedArrotondamento getEmbedded(){
        return this._embedded;
    }
    
    /**
     * Custom methods
     */
    
    public Arrotondamento getArrotondamento(String codArrotondamento){
    	
    	if(UtilString.isEmptyTrim(codArrotondamento))
    	   return null;
    	
    	Arrotondamento returnArrotondamento = null;
    	
    	if (this._embedded!=null) {
    	    
    		List<Arrotondamento> arrotondamenti = this._embedded.getItems();
    	    
    		if (arrotondamenti!= null && arrotondamenti.size()>0){
    			for(Arrotondamento arrotondamento:arrotondamenti){
    				if (arrotondamento.getCode().equals(codArrotondamento)){
    					returnArrotondamento =  arrotondamento;
    					break;
    				}
    			}
    		}
    	}
    	
    	return returnArrotondamento;
    }
    
    public boolean isValidEntities(){
        if (this._embedded!=null) {
     	    
     		List<Arrotondamento> arrotondamenti = this._embedded.getItems();
     	    
     		if (arrotondamenti!= null && arrotondamenti.size()>0)
     			return true;
     		else
     			return false;
        }
        else return false;
     } 
   
}
